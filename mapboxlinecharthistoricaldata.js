let npkChart,moistChart,pHChart,tempChart;let chartData={sortedDates:[],sortedNpkValues:[],sortedMoistValues:[],sortedPHValues:[],sortedTValues:[]};let sortedDates,sortedNpkValues,sortedMoistValues,sortedPHValues,sortedTValues;document.addEventListener('DOMContentLoaded',function(){const popupHistoricalSoilData=document.querySelector('.popup-historicalsoildata');popupHistoricalSoilData.style.display='none';var closeBtn=document.querySelector('.close-btn');var popup=document.querySelector('.popup-historicalsoildata');closeBtn.addEventListener('click',function(){popup.style.display='none';resetCanvas('npkChart');resetCanvas('moistChart');resetCanvas('phChart');resetCanvas('tempChart');});initializeChartsAndShowPopup();function initializeChartsAndShowPopup(){initializeNpkChart(document.getElementById('npkChart'));initializeMoistChart(document.getElementById('moistChart'));initializePhChart(document.getElementById('phChart'));initializeTempChart(document.getElementById('tempChart'));popup.style.display='none';}
function resetCanvas(canvasId){const canvas=document.getElementById(canvasId);const chartInstance=Chart.getChart(canvasId);if(chartInstance){chartInstance.destroy();}
const ctx=canvas.getContext('2d');ctx.clearRect(0,0,canvas.width,canvas.height);if(canvasId==='npkChart'){const npkHeader=document.querySelector('.headerNPK .title');npkHeader.innerHTML='';const npkStatus=document.querySelector('.headerNPK .nutrient-status');if(npkStatus){npkStatus.remove();}}else if(canvasId==='moistChart'){const moistHeader=document.querySelector('.headerMoist .title');moistHeader.innerHTML='';const moistStatus=document.querySelector('.headerMoist .moisture-status');if(moistStatus){moistStatus.remove();}}else if(canvasId==='phChart'){const phHeader=document.querySelector('.headerpH .title');phHeader.innerHTML='';const phStatus=document.querySelector('.headerpH .ph-status');if(phStatus){phStatus.remove();}}else if(canvasId==='tempChart'){const tempHeader=document.querySelector('.headerTemp .title');tempHeader.innerHTML='';const tempStatus=document.querySelector('.headerTemp .temp-status');if(tempStatus){tempStatus.remove();}}
if(canvasId==='npkChart'){initializeNpkChart(canvas);}else if(canvasId==='moistChart'){initializeMoistChart(canvas);}else if(canvasId==='phChart'){initializePhChart(canvas);}else if(canvasId==='tempChart'){initializeTempChart(canvas);}}});function initializeNpkChart(canvas){npkChart=new Chart(canvas,{type:'line',data:{labels:[],datasets:[{label:'NPK',data:[],borderColor:'rgba(255, 99, 132, 1)',backgroundColor:'rgba(255, 99, 132, 0.2)',borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});}
function initializeMoistChart(canvas){moistChart=new Chart(canvas,{type:'line',data:{labels:[],datasets:[{label:'Moisture (%)',data:[],borderColor:'rgba(54, 162, 235, 1)',backgroundColor:'rgba(54, 162, 235, 0.2)',borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});}
function initializePhChart(canvas){pHChart=new Chart(canvas,{type:'line',data:{labels:[],datasets:[{label:'pH',data:[],borderColor:'rgba(75, 192, 192, 1)',backgroundColor:'rgba(75, 192, 192, 0.2)',borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});}
function initializeTempChart(canvas){tempChart=new Chart(canvas,{type:'line',data:{labels:[],datasets:[{label:'Temperature (Â°C)',data:[],borderColor:'rgba(255, 159, 64, 1)',backgroundColor:'rgba(255, 159, 64, 0.2)',borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});}
function updateLineChart(region_id,depth_id){if(!npkChart||!moistChart||!pHChart||!tempChart){return;}
axios.post('https://api-router.enfarm.com/api/v3/charts/retrieve-nutrition-chart-old',{region_id:region_id}).then(function(response){const responseContent=response.data.content;let data;if(responseContent.length===1){data=responseContent[0].values;}else if(responseContent.length>depth_id){data=responseContent[depth_id].values;}else{console.log(`No data found for regionId:${region_id}and depthId:${depth_id}`);return;}
const sortedDates=data.created_at.slice().sort((a,b)=>new Date(a)-new Date(b));const sortedIndices=sortedDates.map(date=>data.created_at.indexOf(date));const sortedNpkValues=sortedIndices.map(index=>data.npk[index]);const sortedMoistValues=sortedIndices.map(index=>data.moist[index]);const sortedPHValues=sortedIndices.map(index=>data.pH[index]);const sortedTValues=sortedIndices.map(index=>data.t[index]);function createGradient(ctx,startColor,endColor){const gradient=ctx.createLinearGradient(0,0,0,ctx.canvas.height);gradient.addColorStop(0,startColor);gradient.addColorStop(1,endColor);return gradient;}
npkChart.data.labels=sortedDates;npkChart.data.datasets[0].data=sortedNpkValues;npkChart.update();moistChart.data.labels=sortedDates;moistChart.data.datasets[0].data=sortedMoistValues;moistChart.update();pHChart.data.labels=sortedDates;pHChart.data.datasets[0].data=sortedPHValues;pHChart.update();tempChart.data.labels=sortedDates;tempChart.data.datasets[0].data=sortedTValues;tempChart.update();const latestNpkValue=sortedNpkValues[sortedNpkValues.length-1];const previousNpkValue=sortedNpkValues[sortedNpkValues.length-2];let indicatorNPK='';if(latestNpkValue>previousNpkValue){indicatorNPK='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestNpkValue<previousNpkValue){indicatorNPK='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentNPK=`<span class="material-symbols-outlined"style="color: rgba(255, 99, 132, 1);">bubble_chart</span>&nbsp;<span style="color: rgba(255, 99, 132, 1)">${latestNpkValue}</span>&nbsp;<span style="color: rgba(255, 99, 132, 1); font-size: 8px;">(latest measure)</span>`;if(indicatorNPK!==''){headerContentNPK+=`&nbsp;&nbsp;${indicatorNPK}`;}
document.querySelector('.headerNPK .title').innerHTML=headerContentNPK;const nutrientRatio=latestNpkValue/300;let nutrientStatus='';let nutrientIcon='';let nutrientColor='';if(latestNpkValue===null){nutrientStatus='No data';nutrientIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">info</span>';nutrientColor='#888888';}else{if(nutrientRatio<0.5){nutrientStatus='Insufficient Nutrients';nutrientIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';nutrientColor='#BA0F30';}else if(nutrientRatio<=0.75){nutrientStatus='Average Nutrients';nutrientIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">check</span>';nutrientColor='#18A558';}else if(nutrientRatio<=1){nutrientStatus='Adequate Nutrients';nutrientIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">done_all</span>';nutrientColor='#18A558';}else{nutrientStatus='Excess Nutrients';nutrientIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';nutrientColor='#BA0F30';}}
const existingNutrientStatus=document.querySelector('.headerNPK .nutrient-status');if(existingNutrientStatus){existingNutrientStatus.remove();}
const nutrientStatusElement=document.createElement('div');nutrientStatusElement.classList.add('nutrient-status');nutrientStatusElement.style.fontSize='10px';nutrientStatusElement.style.color='white';nutrientStatusElement.style.backgroundColor=nutrientColor;nutrientStatusElement.style.borderRadius='20px';nutrientStatusElement.style.padding='4px 5px';nutrientStatusElement.style.boxShadow='0 2px 4px rgba(0, 0, 0, 0.2)';const nutrientTextSpan=document.createElement('span');nutrientTextSpan.style.display='flex';nutrientTextSpan.style.alignItems='center';nutrientTextSpan.style.marginTop='-1px';nutrientTextSpan.innerHTML=`${nutrientIcon}&nbsp;${nutrientStatus}`;nutrientStatusElement.appendChild(nutrientTextSpan);const headerNPKSection=document.querySelector('.headerNPK');headerNPKSection.appendChild(nutrientStatusElement);const latestMoistValue=sortedMoistValues[sortedMoistValues.length-1];const previousMoistValue=sortedMoistValues[sortedMoistValues.length-2];let indicatorMoist='';if(latestMoistValue>previousMoistValue){indicatorMoist='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestMoistValue<previousMoistValue){indicatorMoist='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let moistureStatus='';let moistureIcon='';let moistureColor='';if(latestMoistValue===null){moistureStatus='No data';moistureIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">info</span>';moistureColor='#888888';}else{if(latestMoistValue<22.5){moistureStatus='Very dry';moistureIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';moistureColor='#BA0F30';}else if(latestMoistValue<=35){moistureStatus='Lack of water';moistureIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';moistureColor='#BA0F30';}else if(latestMoistValue<=55){moistureStatus='Enough moisture';moistureIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">done_all</span>';moistureColor='#18A558';}else{moistureStatus='Excess water';moistureIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';moistureColor='#BA0F30';}}
const existingMoistureStatus=document.querySelector('.headerMoist .moisture-status');if(existingMoistureStatus){existingMoistureStatus.remove();}
const moistureStatusElement=document.createElement('div');moistureStatusElement.classList.add('moisture-status');moistureStatusElement.style.fontSize='10px';moistureStatusElement.style.color='white';moistureStatusElement.style.backgroundColor=moistureColor;moistureStatusElement.style.borderRadius='20px';moistureStatusElement.style.padding='4px 5px';moistureStatusElement.style.boxShadow='0 2px 4px rgba(0, 0, 0, 0.2)';const moistureTextSpan=document.createElement('span');moistureTextSpan.style.display='flex';moistureTextSpan.style.alignItems='center';moistureTextSpan.style.marginTop='-1px';moistureTextSpan.innerHTML=`${moistureIcon}&nbsp;${moistureStatus}`;moistureStatusElement.appendChild(moistureTextSpan);const headerMoistSection=document.querySelector('.headerMoist');headerMoistSection.appendChild(moistureStatusElement);let headerContentMoist=`<span class="material-symbols-outlined"style="color: rgba(54, 162, 235, 1);">humidity_mid</span>&nbsp;<span style="color: rgba(54, 162, 235, 1)">${latestMoistValue}</span>&nbsp;<span style="color: rgba(54, 162, 235, 1); font-size: 8px;">(latest measure)</span>`;if(indicatorMoist!==''){headerContentMoist+=`&nbsp;&nbsp;${indicatorMoist}`;}
document.querySelector('.headerMoist .title').innerHTML=headerContentMoist;const latestPHValue=sortedPHValues[sortedPHValues.length-1];const previousPHValue=sortedPHValues[sortedPHValues.length-2];let indicatorPH='';if(latestPHValue>previousPHValue){indicatorPH='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestPHValue<previousPHValue){indicatorPH='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentPH=`<span class="material-symbols-outlined"style="color: rgba(75, 192, 192, 1);">water_ph</span>&nbsp;<span style="color: rgba(75, 192, 192, 1)">${latestPHValue}</span>&nbsp;<span style="color: rgba(75, 192, 192, 1); font-size: 8px;">(latest measure)</span>`;if(indicatorPH!==''){headerContentPH+=`&nbsp;&nbsp;${indicatorPH}`;}
document.querySelector('.headerpH .title').innerHTML=headerContentPH;let pHStatus='';let pHIcon='';let pHColor='';if(latestPHValue===null){pHStatus='No data';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">info</span>';pHColor='#888888';}else{if(latestPHValue===7){pHStatus='Neutral';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">done_all</span>';pHColor='#18A558';}else if(latestPHValue<4){pHStatus='Very Acidic';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';pHColor='#BA0F30';}else if(latestPHValue>=4&&latestPHValue<=4.5){pHStatus='Acidic';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';pHColor='#BA0F30';}else if(latestPHValue>4.5&&latestPHValue<7){pHStatus='Slightly Acidic';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';pHColor='#BA0F30';}else if(latestPHValue>7&&latestPHValue<8){pHStatus='Slightly Alkaline';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';pHColor='#BA0F30';}else if(latestPHValue===8){pHStatus='Alkaline';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';pHColor='#BA0F30';}else if(latestPHValue>8){pHStatus='Very Alkaline';pHIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';pHColor='#BA0F30';}}
const existingPHStatus=document.querySelector('.headerpH .ph-status');if(existingPHStatus){existingPHStatus.remove();}
const pHStatusElement=document.createElement('div');pHStatusElement.classList.add('ph-status');pHStatusElement.style.fontSize='10px';pHStatusElement.style.color='white';pHStatusElement.style.backgroundColor=pHColor;pHStatusElement.style.borderRadius='20px';pHStatusElement.style.padding='4px 5px';pHStatusElement.style.boxShadow='0 2px 4px rgba(0, 0, 0, 0.2)';const pHTextSpan=document.createElement('span');pHTextSpan.style.display='flex';pHTextSpan.style.alignItems='center';pHTextSpan.style.marginTop='-1px';pHTextSpan.innerHTML=`${pHIcon}&nbsp;${pHStatus}`;pHStatusElement.appendChild(pHTextSpan);const headerPHSection=document.querySelector('.headerpH');headerPHSection.appendChild(pHStatusElement);const latestTempValue=sortedTValues[sortedTValues.length-1];const previousTempValue=sortedTValues[sortedTValues.length-2];let indicatorTemp='';if(latestTempValue>previousTempValue){indicatorTemp='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestTempValue<previousTempValue){indicatorTemp='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentTemp=`<span class="material-symbols-outlined"style="color: rgba(255, 159, 64, 1);">device_thermostat</span>&nbsp;<span style="color: rgba(255, 159, 64, 1)">${latestTempValue}</span>&nbsp;<span style="color: rgba(255, 159, 64, 1); font-size: 8px;">(latest measure)</span>`;if(indicatorTemp!==''){headerContentTemp+=`&nbsp;&nbsp;${indicatorTemp}`;}
document.querySelector('.headerTemp .title').innerHTML=headerContentTemp;let tempStatus='';let tempIcon='';let tempColor='';if(latestTempValue===null){tempStatus='No data';tempIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">info</span>';tempColor='#888888';}else{if(latestTempValue>=20&&latestTempValue<=30){tempStatus='Normal Temp';tempIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">done_all</span>';tempColor='#18A558';}else if(latestTempValue<20||latestTempValue>30){tempStatus=latestTempValue<20?'Low Temp':'High Temp';tempIcon='<span class="material-symbols-outlined" style="color: white; font-size: 1rem; margin-top: 2px;">warning</span>';tempColor='#BA0F30';}}
const existingTempStatus=document.querySelector('.headerTemp .temp-status');if(existingTempStatus){existingTempStatus.remove();}
const tempStatusElement=document.createElement('div');tempStatusElement.classList.add('temp-status');tempStatusElement.style.fontSize='10px';tempStatusElement.style.color='white';tempStatusElement.style.backgroundColor=tempColor;tempStatusElement.style.borderRadius='20px';tempStatusElement.style.padding='4px 5px';tempStatusElement.style.boxShadow='0 2px 4px rgba(0, 0, 0, 0.2)';const tempTextSpan=document.createElement('span');tempTextSpan.style.display='flex';tempTextSpan.style.alignItems='center';tempTextSpan.style.marginTop='-1px';tempTextSpan.innerHTML=`${tempIcon}&nbsp;${tempStatus}`;tempStatusElement.appendChild(tempTextSpan);const headerTempSection=document.querySelector('.headerTemp');headerTempSection.appendChild(tempStatusElement);const buttons=document.querySelectorAll('.timeTrend-buttons button');buttons.forEach(button=>{button.addEventListener('click',function(){const timeRange=this.textContent;const endDate=new Date();let startDate;buttons.forEach(btn=>btn.classList.remove('active'));this.classList.add('active');switch(timeRange){case'1Dy':startDate=new Date(endDate.getTime()-1*24*60*60*1000);break;case'1Wk':startDate=new Date(endDate.getTime()-7*24*60*60*1000);break;case'2Wk':startDate=new Date(endDate.getTime()-14*24*60*60*1000);break;case'1Mo':startDate=new Date(endDate.getFullYear(),endDate.getMonth()-1,endDate.getDate());break;case'3Mo':startDate=new Date(endDate.getFullYear(),endDate.getMonth()-3,endDate.getDate());break;case'6Mo':startDate=new Date(endDate.getFullYear(),endDate.getMonth()-6,endDate.getDate());break;case'1Yr':startDate=new Date(endDate.getFullYear()-1,endDate.getMonth(),endDate.getDate());break;case'3Yr':startDate=new Date(endDate.getFullYear()-3,endDate.getMonth(),endDate.getDate());break;case'5Yr':startDate=new Date(endDate.getFullYear()-5,endDate.getMonth(),endDate.getDate());break;default:return;}
const filteredDates=sortedDates.filter(date=>new Date(date)>=startDate&&new Date(date)<=endDate);const filteredNpkValues=sortedNpkValues.filter((_,index)=>filteredDates.includes(sortedDates[index]));const filteredMoistValues=sortedMoistValues.filter((_,index)=>filteredDates.includes(sortedDates[index]));const filteredPHValues=sortedPHValues.filter((_,index)=>filteredDates.includes(sortedDates[index]));const filteredTValues=sortedTValues.filter((_,index)=>filteredDates.includes(sortedDates[index]));npkChart.data.labels=filteredDates;npkChart.data.datasets[0].data=filteredNpkValues;npkChart.update();moistChart.data.labels=filteredDates;moistChart.data.datasets[0].data=filteredMoistValues;moistChart.update();pHChart.data.labels=filteredDates;pHChart.data.datasets[0].data=filteredPHValues;pHChart.update();tempChart.data.labels=filteredDates;tempChart.data.datasets[0].data=filteredTValues;tempChart.update();});});}).catch(function(error){console.error("Error fetching data: ",error);});}
window.updateLineChart=updateLineChart;function setActiveButton(button){const buttons=document.querySelectorAll('.timeTrend-buttons button');buttons.forEach(btn=>btn.classList.remove('active'));button.classList.add('active');}