document.addEventListener('DOMContentLoaded',function(){const popupHistoricalSoilData=document.querySelector('.popup-historicalsoildata');popupHistoricalSoilData.style.display='none';});document.addEventListener('DOMContentLoaded',function(){var closeBtn=document.querySelector('.close-btn');var popup=document.querySelector('.popup-historicalsoildata');closeBtn.addEventListener('click',function(){popup.style.display='none';});});axios.post('https://api-router.enfarm.com/api/v3/charts/retrieve-nutrition-chart',{region_id:44
}).then(function(response){const data=response.data.content[0].values;const sortedDates=data.created_at.slice().sort((a,b)=>new Date(a)-new Date(b));const sortedIndices=sortedDates.map(date=>data.created_at.indexOf(date));const sortedNpkValues=sortedIndices.map(index=>data.npk[index]);const sortedMoistValues=sortedIndices.map(index=>data.moist[index]);const sortedPHValues=sortedIndices.map(index=>data.pH[index]);const sortedTValues=sortedIndices.map(index=>data.t[index]);function createGradient(ctx,startColor,endColor){const gradient=ctx.createLinearGradient(0,0,0,ctx.canvas.height);gradient.addColorStop(0,startColor);gradient.addColorStop(1,endColor);return gradient;}
const npkCtx=document.getElementById('npkChart').getContext('2d');const npkGradient=createGradient(npkCtx,'rgba(255, 99, 132, 0.8)','rgba(255, 255, 255, 0)');const npkChart=new Chart(npkCtx,{type:'line',data:{labels:sortedDates,datasets:[{label:'NPK',data:sortedNpkValues,borderColor:'rgba(255, 99, 132, 1)',backgroundColor:npkGradient,borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});const latestNpkValue=sortedNpkValues[sortedNpkValues.length-1];const previousNpkValue=sortedNpkValues[sortedNpkValues.length-2];let indicatorNPK='';if(latestNpkValue>previousNpkValue){indicatorNPK='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestNpkValue<previousNpkValue){indicatorNPK='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentNPK=`<span class="material-symbols-outlined"style="color: rgba(255, 99, 132, 1);">bubble_chart</span>&nbsp;<span style="color: rgba(255, 99, 132, 1)">${latestNpkValue}</span>`;if(indicatorNPK!==''){headerContentNPK+=`&nbsp;&nbsp;${indicatorNPK}`;}
document.querySelector('.headerNPK .title').innerHTML=headerContentNPK;const moistCtx=document.getElementById('moistChart').getContext('2d');const moistGradient=createGradient(moistCtx,'rgba(54, 162, 235, 0.8)','rgba(54, 162, 235, 0)');const moistChart=new Chart(moistCtx,{type:'line',data:{labels:sortedDates,datasets:[{label:'Moisture (%)',data:sortedMoistValues,borderColor:'rgba(54, 162, 235, 1)',backgroundColor:moistGradient,borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});const latestMoistValue=sortedMoistValues[sortedMoistValues.length-1];const previousMoistValue=sortedMoistValues[sortedMoistValues.length-2];let indicatorMoist='';if(latestMoistValue>previousMoistValue){indicatorMoist='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestMoistValue<previousMoistValue){indicatorMoist='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentMoist=`<span class="material-symbols-outlined"style="color: rgba(54, 162, 235, 1);">humidity_mid</span>&nbsp;<span style="color:rgba(54, 162, 235, 1)">${latestMoistValue}</span>`;if(indicatorMoist!==''){headerContentMoist+=`&nbsp;&nbsp;${indicatorMoist}`;}
document.querySelector('.headerMoist .title').innerHTML=headerContentMoist;const pHCtx=document.getElementById('phChart').getContext('2d');const pHGradient=createGradient(pHCtx,'rgba(75, 192, 192, 0.8)','rgba(75, 192, 192, 0)');const pHChart=new Chart(pHCtx,{type:'line',data:{labels:sortedDates,datasets:[{label:'pH',data:sortedPHValues,borderColor:'rgba(75, 192, 192, 1)',backgroundColor:pHGradient,borderWidth:1,fill:true}]},options:{scales:{yAxes:[{ticks:{beginAtZero:true}}],xAxes:[{type:'time',time:{minUnit:'day',displayFormats:{day:'MMM D, YYYY'}},ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});const latestPHValue=sortedPHValues[sortedPHValues.length-1];const previousPHValue=sortedPHValues[sortedPHValues.length-2];let indicatorPH='';if(latestPHValue>previousPHValue){indicatorPH='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestPHValue<previousPHValue){indicatorPH='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentPH=`<span class="material-symbols-outlined"style="color: rgba(75, 192, 192, 1);">water_ph</span>&nbsp;<span style="color:rgba(75, 192, 192, 1)">${latestPHValue}</span>`;if(indicatorPH!==''){headerContentPH+=`&nbsp;&nbsp;${indicatorPH}`;}
document.querySelector('.headerpH .title').innerHTML=headerContentPH;const tCtx=document.getElementById('tempChart').getContext('2d');const tGradient=createGradient(tCtx,'rgba(255, 159, 64, 0.8)','rgba(255, 159, 64, 0)');const tempChart=new Chart(tCtx,{type:'line',data:{labels:sortedDates,datasets:[{label:'Temperature (Â°C)',data:sortedTValues,borderColor:'rgba(255, 159, 64, 1)',backgroundColor:tGradient,borderWidth:1,fill:true}]},options:{scales:{yAxes:[{display:false,ticks:{font:{size:6}}}]},layout:{padding:{top:0}}}});const latestTempValue=sortedTValues[sortedTValues.length-1];const previousTempValue=sortedTValues[sortedTValues.length-2];let indicatorTemp='';if(latestTempValue>previousTempValue){indicatorTemp='<span class="material-symbols-outlined" style="color: green; font-size: 2rem;">arrow_drop_up</span>';}else if(latestTempValue<previousTempValue){indicatorTemp='<span class="material-symbols-outlined" style="color: red; font-size: 2rem;">arrow_drop_down</span>';}
let headerContentTemp=`<span class="material-symbols-outlined"style="color: rgba(255, 159, 64, 1);">device_thermostat</span>&nbsp;<span style="color:rgba(255, 159, 64, 1)">${latestTempValue}</span>`;if(indicatorTemp!==''){headerContentTemp+=`&nbsp;&nbsp;${indicatorTemp}`;}
document.querySelector('.headerTemp .title').innerHTML=headerContentTemp;}).catch(function(error){console.log(error);});